---

name: Deploy Hugo site to Pages

'on':
  push:
    branches:
      - main
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

env:
  HUGO_ENVIRONMENT: production
  TZ: Europe/Berlin

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Get Hugo version
        run: |
          version="$(python3 -c 'import sys, yaml; y=yaml.safe_load(sys.stdin.read()); print(y["module"]["hugoVersion"]["min"])' < hugo.yaml)"
          echo "HUGO_VERSION=${version}" >> $GITHUB_ENV

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm

      - name: Install dependencies
        run: npm install

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '${{ env.HUGO_VERSION }}'
          extended: true

      - name: Build with Hugo
        run: hugo --minify

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    runs-on: ubuntu-latest
    needs: build

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
